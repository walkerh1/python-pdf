#!/usr/bin/env python3

# pypdf - a command-line tool that is essentially a wrapper for the python
# module, PyPDF2, allowing users to manipulate PDFs from the command-line.

import sys
import PyPDF2


def merge(new_file, pdfs):
    """Merge pdfs into new pdf file."""

    # Initialise merge object.
    pdf_merger = PyPDF2.PdfFileMerger()

    # Append files to merge object.
    for filename in pdfs:
        pdf_merger.append(filename)

    # Write the merged files to new pdf file.
    with open(new_file, 'wb') as pdf_output:
        pdf_merger.write(pdf_output)


def extraxt(*pdfs):
    # TODO: implement PDF info extraction
    pass


def rotatePages(pdf, pages):
    # TODO: implement PDF page rotation
    pass


def splitPDF(pdf, *newfiles):
    # TODO: implement PDF split
    pass


def encrypt(*pdfs):
    # TODO: implement PDF encryption
    pass


if __name__ == '__main__':

    if len(sys.argv) < 3:
        sys.exit(f"Usage: {sys.argv[0]}: <command> <files>")

    elif sys.argv[1] == 'merge' and len(sys.argv[2:]) > 1:
        merge(sys.argv[2], sys.argv[3:])

    elif sys.argv[1] == 'extract':
        pass

    elif sys.argv[1] == 'rotate':
        pass

    elif sys.argv[1] == 'split':
        pass

    elif sys.argv[1] == 'encrypt':
        pass

    else:
        sys.exit(f"Usage: {sys.argv[0]}: <command> <files>")
